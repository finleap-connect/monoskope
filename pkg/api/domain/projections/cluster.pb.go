// Copyright 2022 Monoskope Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.2
// source: api/domain/projections/cluster.proto

package projections

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterRole_ClusterRoleScope int32

const (
	ClusterRole_CLUSTER ClusterRole_ClusterRoleScope = 0
	ClusterRole_TENANT  ClusterRole_ClusterRoleScope = 1
)

// Enum value maps for ClusterRole_ClusterRoleScope.
var (
	ClusterRole_ClusterRoleScope_name = map[int32]string{
		0: "CLUSTER",
		1: "TENANT",
	}
	ClusterRole_ClusterRoleScope_value = map[string]int32{
		"CLUSTER": 0,
		"TENANT":  1,
	}
)

func (x ClusterRole_ClusterRoleScope) Enum() *ClusterRole_ClusterRoleScope {
	p := new(ClusterRole_ClusterRoleScope)
	*p = x
	return p
}

func (x ClusterRole_ClusterRoleScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterRole_ClusterRoleScope) Descriptor() protoreflect.EnumDescriptor {
	return file_api_domain_projections_cluster_proto_enumTypes[0].Descriptor()
}

func (ClusterRole_ClusterRoleScope) Type() protoreflect.EnumType {
	return &file_api_domain_projections_cluster_proto_enumTypes[0]
}

func (x ClusterRole_ClusterRoleScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterRole_ClusterRoleScope.Descriptor instead.
func (ClusterRole_ClusterRoleScope) EnumDescriptor() ([]byte, []int) {
	return file_api_domain_projections_cluster_proto_rawDescGZIP(), []int{3, 0}
}

// Cluster is the information the Control Plane has about a cluster
type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the cluster (UUID 128-bit number)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique name of the cluster, to be utilized for generating unique labels
	// and symbols, e.g. with metrics.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Address of the clusters KubeAPIServer
	ApiServerAddress string `protobuf:"bytes,3,opt,name=api_server_address,json=apiServerAddress,proto3" json:"api_server_address,omitempty"`
	// CA certificates of the cluster
	CaCertBundle []byte `protobuf:"bytes,4,opt,name=ca_cert_bundle,json=caCertBundle,proto3" json:"ca_cert_bundle,omitempty"`
	// Metadata about the projection
	Metadata *LifecycleMetadata `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_domain_projections_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_api_domain_projections_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_api_domain_projections_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Cluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetApiServerAddress() string {
	if x != nil {
		return x.ApiServerAddress
	}
	return ""
}

func (x *Cluster) GetCaCertBundle() []byte {
	if x != nil {
		return x.CaCertBundle
	}
	return nil
}

func (x *Cluster) GetMetadata() *LifecycleMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ClusterAccess represents an access to a specific cluster with a list of roles
// within that cluster for a user
type ClusterAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Roles   []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ClusterAccess) Reset() {
	*x = ClusterAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_domain_projections_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterAccess) ProtoMessage() {}

func (x *ClusterAccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_domain_projections_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterAccess.ProtoReflect.Descriptor instead.
func (*ClusterAccess) Descriptor() ([]byte, []int) {
	return file_api_domain_projections_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterAccess) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ClusterAccess) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// ClusterAccessV2 represents an access to a specific cluster with a list of
// roles within that cluster for a user
type ClusterAccessV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster      *Cluster       `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	ClusterRoles []*ClusterRole `protobuf:"bytes,2,rep,name=clusterRoles,proto3" json:"clusterRoles,omitempty"`
}

func (x *ClusterAccessV2) Reset() {
	*x = ClusterAccessV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_domain_projections_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterAccessV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterAccessV2) ProtoMessage() {}

func (x *ClusterAccessV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_domain_projections_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterAccessV2.ProtoReflect.Descriptor instead.
func (*ClusterAccessV2) Descriptor() ([]byte, []int) {
	return file_api_domain_projections_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *ClusterAccessV2) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ClusterAccessV2) GetClusterRoles() []*ClusterRole {
	if x != nil {
		return x.ClusterRoles
	}
	return nil
}

// ClusterRole is the role a user has in a cluster
type ClusterRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope ClusterRole_ClusterRoleScope `protobuf:"varint,1,opt,name=scope,proto3,enum=projections.ClusterRole_ClusterRoleScope" json:"scope,omitempty"`
	Role  string                       `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ClusterRole) Reset() {
	*x = ClusterRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_domain_projections_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterRole) ProtoMessage() {}

func (x *ClusterRole) ProtoReflect() protoreflect.Message {
	mi := &file_api_domain_projections_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterRole.ProtoReflect.Descriptor instead.
func (*ClusterRole) Descriptor() ([]byte, []int) {
	return file_api_domain_projections_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterRole) GetScope() ClusterRole_ClusterRoleScope {
	if x != nil {
		return x.Scope
	}
	return ClusterRole_CLUSTER
}

func (x *ClusterRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

var File_api_domain_projections_cluster_proto protoreflect.FileDescriptor

var file_api_domain_projections_cluster_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x07, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x3a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x0d, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x22, 0x7f, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x56, 0x32, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x45, 0x4e, 0x41,
	0x4e, 0x54, 0x10, 0x01, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6e, 0x6c, 0x65, 0x61, 0x70, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x73, 0x6b, 0x6f, 0x70, 0x65, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_domain_projections_cluster_proto_rawDescOnce sync.Once
	file_api_domain_projections_cluster_proto_rawDescData = file_api_domain_projections_cluster_proto_rawDesc
)

func file_api_domain_projections_cluster_proto_rawDescGZIP() []byte {
	file_api_domain_projections_cluster_proto_rawDescOnce.Do(func() {
		file_api_domain_projections_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_domain_projections_cluster_proto_rawDescData)
	})
	return file_api_domain_projections_cluster_proto_rawDescData
}

var file_api_domain_projections_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_domain_projections_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_domain_projections_cluster_proto_goTypes = []interface{}{
	(ClusterRole_ClusterRoleScope)(0), // 0: projections.ClusterRole.ClusterRoleScope
	(*Cluster)(nil),                   // 1: projections.Cluster
	(*ClusterAccess)(nil),             // 2: projections.ClusterAccess
	(*ClusterAccessV2)(nil),           // 3: projections.ClusterAccessV2
	(*ClusterRole)(nil),               // 4: projections.ClusterRole
	(*LifecycleMetadata)(nil),         // 5: projections.LifecycleMetadata
}
var file_api_domain_projections_cluster_proto_depIdxs = []int32{
	5, // 0: projections.Cluster.metadata:type_name -> projections.LifecycleMetadata
	1, // 1: projections.ClusterAccess.cluster:type_name -> projections.Cluster
	1, // 2: projections.ClusterAccessV2.cluster:type_name -> projections.Cluster
	4, // 3: projections.ClusterAccessV2.clusterRoles:type_name -> projections.ClusterRole
	0, // 4: projections.ClusterRole.scope:type_name -> projections.ClusterRole.ClusterRoleScope
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_domain_projections_cluster_proto_init() }
func file_api_domain_projections_cluster_proto_init() {
	if File_api_domain_projections_cluster_proto != nil {
		return
	}
	file_api_domain_projections_metadata_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_domain_projections_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_domain_projections_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_domain_projections_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterAccessV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_domain_projections_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_domain_projections_cluster_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_domain_projections_cluster_proto_goTypes,
		DependencyIndexes: file_api_domain_projections_cluster_proto_depIdxs,
		EnumInfos:         file_api_domain_projections_cluster_proto_enumTypes,
		MessageInfos:      file_api_domain_projections_cluster_proto_msgTypes,
	}.Build()
	File_api_domain_projections_cluster_proto = out.File
	file_api_domain_projections_cluster_proto_rawDesc = nil
	file_api_domain_projections_cluster_proto_goTypes = nil
	file_api_domain_projections_cluster_proto_depIdxs = nil
}
