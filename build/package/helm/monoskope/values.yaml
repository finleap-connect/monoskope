# Default values for monoskope.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: monoskope
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: false
  host: monoskope.dev.finleap.cloud
  dexPath: /dex
  apiPath: /api

dex: # OIDC Provider
  enabled: false
  imagePullPolicy: "Always"
  imagePullSecrets: []
  config:
    existingSecret: monoskope-dex-config # use vaultsecret to configure dex
    issuer: https://monoskope.dev.finleap.cloud/dex
    storage:
      config:
        inCluster: true
      type: kubernetes
    logger:
      level: debug
    web:
      address: 0.0.0.0
    oauth2:
      alwaysShowLoginScreen: false
      skipApprovalScreen: true
    enablePasswordDB: false
    connectors: []
    staticClients:
      - id: gateway
        secret: "{{ gateway-app-secret }}"
        name: "Monoskope Gateway"
        redirectURIs:
          - "http://localhost:8000" # callback from dex to monoctl
          - "http://localhost:18000"
  https: false
  ports:
    web:
      containerPort: 5556
  grpc: false
  resources:
    limits:
      cpu: 500m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  telemetry: true
  certs:
    web:
      create: false
    grpc:
      create: false
  rbac:
    # Specifies whether RBAC resources should be created
    create: false
  crd:
    # Specifies whether dex's CRDs are already present (if not cluster role and cluster role binding will be created
    # to enable dex to create them). Depends on rbac.create
    present: true
  serviceAccount:
    # Specifies whether a ServiceAccount should be created
    create: false
    # The name of the ServiceAccount to use.
  # frontend:
  #   logoURL: https://example.com/yourlogo.png

gateway:
  name: gateway
  secretName: monoskope-gateway-secret
  image:
    repository: registry.gitlab.figo.systems/platform/monoskope/gateway
    tag: latest
    pullPolicy: Always
  replicaCount: 3
  livenessProbe:
    enabled: true
    failureThreshold: 10
    periodSeconds: 5
    initialDelaySeconds: 10
  readinessProbe:
    enabled: false
    failureThreshold: 5
    periodSeconds: 5
    initialDelaySeconds: 5
  resources:
    limits:
      cpu: 1
      memory: 500Mi
    requests:
      cpu: 300m
      memory: 300Mi
  nodeSelector: {}
  tolerations: []
  apiPort: 8080
  metricsPort: 9102
  keepAlive: false
  service:
    type: ClusterIP
    port: 8080
  auth:
    allowRootToken: false