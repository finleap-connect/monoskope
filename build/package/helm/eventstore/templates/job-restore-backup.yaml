{{ if .Values.backup.restore.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "eventstore.fullname" . }}-restore
  labels:
    {{- include "eventstore.labels" . | nindent 4 }}
    {{- with (.Values.labels | default .Values.global.labels) }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ttlSecondsAfterFinished: 500
  backoffLimit: 60
  completions: 1
  parallelism: 1
  selector:
    matchLabels:
      job-name: {{ include "eventstore.fullname" . }}-restore
  template:
    metadata:
      annotations:
        linkerd.io/inject: disabled
      {{- with $merged.podAnnotations }}
        {{- toYaml . | nindent 12 }}
      {{- end }}
      labels:
        {{- include "eventstore.selectorLabels" . | nindent 8 }}
        {{- with (.Values.labels | default .Values.global.labels) }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: OnFailure
      {{- with (.Values.imagePullSecrets | default .Values.global.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.storeDatabase.tlsSecret }}
        - name: dbcerts
          secret:
            secretName: {{ .Values.storeDatabase.tlsSecret }}
            items:
              - key: ca.crt
                path: ca.crt
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
        {{- end }}
        - name: backup-config
          configMap:
            name: {{ include "eventstore.fullname" . }}-backup
            items:
          {{- if .Values.backup.destination.s3 }}
            - key: "s3.yaml"
              path: "s3.yaml"
          {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - /eventstore
          - restore
          - --timeout={{ .Values.backup.restore.timeout }}
          - --identifier={{ .Values.backup.restore.backupIdentifier }}
        volumeMounts:
          {{- if .Values.storeDatabase.tlsSecret }}
          - name: dbcerts
            mountPath: /etc/eventstore/certs/db
          {{- end }}
          - name: backup-config
            mountPath: /etc/eventstore/backup
        envFrom:
          - secretRef:
              name: {{ .Values.storeDatabase.configSecret | default (printf "%s-%s" (include "eventstore.fullname" .) "db") }}
          - secretRef:
              name: {{ .Values.backup.existingSecretName | default (printf "%s-%s" (include "eventstore.fullname" .) "backup") }}
        env:
          - name: K8S_JOB
            value: {{ include "eventstore.fullname" . }}-backup
          - name: K8S_NAMESPACE
            value: {{ .Release.Namespace | quote }}
          - name: K8S_POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{ end }}
