{{- $name := include "gateway.name" . -}}
{{- $fullname := include "gateway.fullname" . -}}
{{- $release := .Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  progressDeadlineSeconds: 120
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  replicas: {{ .Values.replicaCount | default 3 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: {{ $name }}
        {{- include "gateway.labels" . | nindent 8 }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.pullSecret }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ $fullname }}
              topologyKey: kubernetes.io/hostname
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{.}}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ $name }}
        {{- with .Values }}
        image: {{ .image.repository }}:{{ .image.tag }}
        imagePullPolicy: {{ .image.pullPolicy }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.ports.api }}
        - name: http-metrics
          containerPort: {{ .Values.ports.metrics }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        env:
          - name: OIDC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: oidc-clientsecret
{{- if .Values.auth.allowRootToken }}
          - name: AUTH_ROOT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: auth-root-token
{{- end }}
        args:
          - /gateway
          - server
          - {{ (printf "--api-addr=:%v" .Values.ports.api) }}
          - {{ (printf "--metrics-addr=:%v" .Values.ports.metrics) }}
          - {{ (printf "--issuer-url=%s" .Values.auth.issuerURL ) }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
              path: /readyz
              port: {{ .Values.ports.api }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
              path: /readyz
              port: {{ .Values.ports.api }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
        {{- end }}