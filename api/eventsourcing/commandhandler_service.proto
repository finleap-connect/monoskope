syntax = "proto3";

// This file follows google's gRPC naming conventions:
// https://cloud.google.com/apis/design/naming_convention

import "api/eventsourcing/commands/command.proto";

option go_package = "gitlab.figo.systems/platform/monoskope/monoskope/pkg/api/eventsourcing";

package eventsourcing;

message CommandReply {
  // UUID of the referenced aggregate. If this was a "Create*" command, the ID provied 
  // with the command is ignored. A valid ID is generated by the command handler and 
  // returned here.
  string aggregate_id =1; // required
  // version of the aggregate at the time of command being received. Any resulting events 
  // applied afterwards to the aggregate will increase this.
  uint64 version = 2;
}

// API of the Monoskope CommandHandler.
service CommandHandler {
  // Execute executes a command.
  rpc Execute(commands.Command) returns (CommandReply);
}
