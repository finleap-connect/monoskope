syntax = "proto3";

// This file follows google's gRPC naming conventions:
// https://cloud.google.com/apis/design/naming_convention

import "google/protobuf/empty.proto";
import "api/gateway/messages.proto";

option objc_class_prefix = "MG";
option go_package =
    "gitlab.figo.systems/platform/monoskope/monoskope/api/gateway";

package gateway;

// Actual API of the Monoskope Gateway.
// RPCs of this service need authentication.
service Gateway {
  // Get information like the version of the Gateway
  rpc GetServerInfo(google.protobuf.Empty) returns(ServerInformation);

  // Create a new tenant
  rpc CreateTenant(CreateTenantRequest) returns(Tenant);
  // Get an existing tenant
  rpc GetTenant(GetTenantRequest) returns(Tenant);
  // Update an existing tenant
  rpc UpdateTenant(UpdateTenantRequest) returns(Tenant);
  // Delete a tenant
  rpc DeleteTenant(DeleteTenantRequest) returns(google.protobuf.Empty);
  // List all tenants
  rpc ListTenants(ListTenantsRequest) returns(stream Tenant);
}
