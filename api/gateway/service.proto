syntax = "proto3";

// This file follows google's gRPC naming conventions:
// https://cloud.google.com/apis/design/naming_convention

import "google/protobuf/timestamp.proto";

option go_package = "gitlab.figo.systems/platform/monoskope/monoskope/pkg/api/gateway";

package gateway;

// API of the Monoskope Gateway.
service Gateway {
  rpc GetAuthInformation(AuthState) returns (AuthInformation);
  rpc ExchangeAuthCode(AuthCode) returns (AuthResponse);
}

// ClusterAuth is the API to request token for cluster authentication from
service ClusterAuth {
  rpc GetAuthToken(ClusterAuthTokenRequest) returns (ClusterAuthTokenResponse);
}

message AuthState { string CallbackURL = 1; }

message AuthInformation {
  string AuthCodeURL = 1;
  string State = 2;
}

message AuthCode {
  string Code = 1;
  string State = 2;
  string CallbackURL = 3;
}

message AuthResponse {
  string AccessToken = 1;
  google.protobuf.Timestamp Expiry = 2;
  string Username = 3;
}

// ClusterAuthTokenRequest is send in order to retrieve an auth token valid to
// authenticate against a certain cluster with a specific role
message ClusterAuthTokenRequest {
  // Unique identifier of the cluster (UUID 128-bit number)
  string cluster_id = 1;
  // Kubernetes role name
  string role = 2;
}

// ClusterAuthTokenResponse contains an auth token valid to
// authenticate against a certain cluster with a specific role
message ClusterAuthTokenResponse {
  string AccessToken = 1;
  google.protobuf.Timestamp Expiry = 2;
}