
syntax = "proto3";

// This file follows google's gRPC naming conventions:
// https://cloud.google.com/apis/design/naming_convention

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/wrappers.proto";

option go_package =
    "gitlab.figo.systems/platform/monoskope/monoskope/pkg/api/eventstore";

package eventstore;

// Event describes anything that has happened in the system.
// An event type name should be in past tense and contain the intent
// (TenantUpdated). The event should contain all the data needed when
// applying/handling it.
// The combination of aggregate_type, aggregate_id and sequence_number is
// unique.
message Event {
  // ID of the event (UUID 128-bit number, PK)
  string id = 1;
  // Type of the event
  string type = 2;
  // Timestamp of when the event was created
  google.protobuf.Timestamp timestamp = 3;
  // Strict monotone counter, per aggregate/aggregate_id relation
  int64 sequence_number = 4;
  // ID of the aggregate that the event should be applied to (UUID 128-bit
  // number)
  string aggregate_id = 5;
  // Type of the aggregate that the event can be applied to
  string aggregate_type = 6;
  // Event type specific event data
  google.protobuf.Any data = 7;
}

// Request to get Events from to the store
message EventFilter {
  oneof filter_by {
    // Get specific event by it's id
    google.protobuf.StringValue event_id = 1;
    // Get event stream through filter
    Filter filter = 2;
  }

  // EventStore filter
  message Filter {
    oneof aggregate_by {
      // Filter events by aggregate_id
      google.protobuf.StringValue aggregate_id = 1;
      // Filter events for a specific aggregate type
      google.protobuf.StringValue aggregate_type = 2;
    }
    // Filter events with a sequence_number >= min_sequence_number
    google.protobuf.Int64Value min_sequence_number = 3;
    // Filter events with a sequence_number <= max_sequence_number
    google.protobuf.Int64Value max_sequence_number = 4;
    // Filter events with a timestamp >= min_timestamp
    google.protobuf.Timestamp min_timestamp = 5;
    // Filter events with a timestamp <= max_timestamp
    google.protobuf.Timestamp max_timestamp = 6;
  }
}
